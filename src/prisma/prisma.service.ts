import { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';
import { PrismaClient } from 'generated/prisma';

@Injectable()
export class PrismaService
  extends PrismaClient
  implements OnModuleInit, OnModuleDestroy
{
  // ğŸ‘‰ Ici, tu ouvres une connexion Ã  la base de donnÃ©es quand le module est initialisÃ©.
  // Câ€™est utile si tu veux forcer Prisma Ã  se connecter dÃ¨s le dÃ©marrage, au lieu dâ€™attendre une requÃªte
  async onModuleInit() {
    await this.$connect(); // hÃ©ritÃ© de PrismaClient
  }

  // AppelÃ© automatiquement quand lâ€™application est arrÃªtÃ©e (ou redÃ©marre).
  // Ici, tu fermes la connexion Ã  la base de donnÃ©es pour Ã©viter les fuites de mÃ©moire.
  async onModuleDestroy() {
    await this.$disconnect(); // hÃ©ritÃ© de PrismaClient
  }

  // Le mot-clÃ© "this" fait rÃ©fÃ©rence Ã  lâ€™instance actuelle de la classe PrismaService.
}
